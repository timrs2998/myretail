import org.gradle.api.tasks.wrapper.Wrapper.DistributionType

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("com.github.ben-manes:gradle-versions-plugin:$gradleVersionsPluginVersion")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
    }
}

// Use "./gradlew dependencyUpdates -Drevision=release" to check dependencies
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'eclipse'

allprojects {
    version = '0.0.1-SNAPSHOT'
    repositories {
        jcenter()
    }
}

subprojects {

    apply plugin: 'groovy'
    apply plugin: 'kotlin'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }

    dependencies {
        // Kotlin
        compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion")
        compile("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
        compile("com.fasterxml.jackson.core:jackson-databind:$jacksonModuleKotlinVersion")
        compile("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonModuleKotlinVersion")

        // Spock
        testCompile("org.codehaus.groovy:groovy-all:$groovyVersion")
        testCompile("org.spockframework:spock-core:$spockVersion")
        testCompile("cglib:cglib:$cglibVersion")
    }

    test {
        testLogging {
            exceptionFormat = 'full'
        }
    }
}

tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

wrapper {
    distributionType = DistributionType.ALL
    gradleVersion = '4.1'
}
