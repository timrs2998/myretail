buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath("org.asciidoctor:asciidoctor-gradle-plugin:$asciiDoctor")
  }
}

plugins {
  id 'com.gorylenko.gradle-git-properties' version '2.0.0'
}

apply plugin: 'kotlin-spring'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'org.springframework.boot'

dependencies {
  asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:$springRestdocsVersion"

  implementation project(':myretail-api')
  implementation project(':redsky-api')
  implementation project(':redsky-client')
  testImplementation project(':myretail-client')

  implementation('org.springframework.boot:spring-boot-starter-actuator')
  implementation('org.springframework.boot:spring-boot-starter-data-cassandra')
  implementation('org.springframework.boot:spring-boot-starter-hateoas')
  implementation('org.springframework.data:spring-data-rest-hal-browser')
  implementation("javax.inject:javax.inject:$javaxInjectVersion")
  implementation("com.squareup.retrofit2:retrofit:$retrofitVersion")
  implementation("com.squareup.retrofit2:converter-jackson:$retrofitVersion")
  implementation("com.squareup.retrofit2:adapter-java8:$retrofitVersion")
  implementation("io.dropwizard.metrics:metrics-core:$dropwizardMetricsCore")
  runtime('org.springframework.boot:spring-boot-devtools')

  testImplementation("com.squareup.retrofit2:retrofit-mock:$retrofitVersion")
  testImplementation('org.springframework.boot:spring-boot-starter-test')
  testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
  testImplementation("org.spockframework:spock-spring:$spockVersion")
}

springBoot  {
  buildInfo()
}

// asciidoctor
ext {
  snippetsDir = file('build/generated-snippets')
}
test {
  outputs.dir snippetsDir
}
asciidoctor {
  attributes 'snippets': snippetsDir
  inputs.dir snippetsDir
  dependsOn test
}
jar {
  dependsOn asciidoctor
  from ("$asciidoctor.outputDir/html5") {
    into 'static/docs'
  }
}

